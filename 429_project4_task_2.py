# -*- coding: utf-8 -*-
"""429_project4_task_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FAO7JI9Q1GBqHdQ-vj92qay1EDo20iZ3
"""

import matplotlib.pyplot as plt
import numpy as np
from keras.datasets import mnist
from keras.layers import Input, Dense
from keras.models import Model

input_image = Input((784,))

encode = Dense(32, activation='relu')(input_image)

decode = Dense(784, activation='sigmoid')(encode)

auto_encoder = Model(input_image, decode)

encoder = Model(input_image, encode)

encoder_input = Input((32,))
decoding_layer = auto_encoder.layers[-1]
decoder = Model(encoder_input, decoding_layer(encoder_input))

auto_encoder.compile(optimizer='adam', loss='mse')

(x_train, _), (x_test, _) = mnist.load_data()
x_train = x_train.astype('float32') / 255.
x_test = x_test.astype('float32') / 255.
x_train = x_train.reshape((len(x_train), np.prod(x_train.shape[1:])))
x_test = x_test.reshape((len(x_test), np.prod(x_test.shape[1:])))

auto_encoder.fit(x_train, x_train,
                epochs=50,
                batch_size=256,
                validation_data=(x_test, x_test),
                verbose=1)

encoder_images = encoder.predict(x_test)
decoder_images = decoder.predict(encoder_images)

n = 10
plt.figure(figsize=(20, 4))
for i in range(n):
    ax = plt.subplot(2, n, i + 1)
    plt.imshow(x_test[i].reshape(28, 28))
    plt.gray()
    ax.get_xaxis().set_visible(False)
    ax.get_yaxis().set_visible(False)
    ax = plt.subplot(2, n, i + 1 + n)
    plt.imshow(decoder_images[i].reshape(28, 28))
    plt.gray()
    ax.get_xaxis().set_visible(False)
    ax.get_yaxis().set_visible(False)
plt.show()